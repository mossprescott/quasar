#!/bin/bash

set -euo pipefail # STRICT MODE
IFS=$'\n\t'       # http://redsymbol.net/articles/unofficial-bash-strict-mode/

#
# This script is intended to be run by continuous integration tools, allowing
# actual details of the build and test process to change without having to
# update CI configuration.
#

source "$(dirname $0)/constants"

echo "Script Path:   $SCRIPT_DIR"
echo "Root Path:     $WS_DIR"
echo "Temp Path:     $TEMP_DIR"
echo "Version:       $SLAM_VERSION"
echo "Web Jar:       $SLAM_WEB_JAR"
echo "Web Jar Dir:   $SLAM_WEB_JAR_DIR"
echo "Web Jar Path:  $SLAM_WEB_JAR_PATH"
echo "REPL Jar:      $SLAM_REPL_JAR"
echo "REPL Jar Dir:  $SLAM_REPL_JAR_DIR"
echo "REPL Jar Path: $SLAM_REPL_JAR_PATH"

SLAM_TEMP_JAR="$TEMP_DIR/$SLAM_WEB_JAR"

rm -rf "$TEMP_DIR"
mkdir -p "$TEMP_DIR"

# Build the pristine JAR without coverage:
"$SBT" clean oneJar

# Save a copy of the "clean" oneJar, since running code coverage
# will produce a "dirty" version:
cp "$SLAM_WEB_JAR_PATH" "$SLAM_TEMP_JAR"

# Perform setup for integration tests:
if [[ ${LOCAL_MONGODB:-} == "true" ]] ; then
  echo "Using local MongoDB config"

  export SLAMDATA_MONGODB_2_6='{"mongodb": {"connectionUri": "mongodb://localhost:27018/test"}}'
  export SLAMDATA_MONGODB_3_0='{"mongodb": {"connectionUri": "mongodb://localhost:27019/test"}}'

  # TODO: Move to code
  echo "Importing zips data set for integration tests"

  mongo2.6/bin/mongoimport -h localhost:27018 --db test --collection zips --file "$WS_DIR/it/src/test/resources/tests/zips.data"
  mongo3.0/bin/mongoimport -h localhost:27019 --db test --collection zips --file "$WS_DIR/it/src/test/resources/tests/zips.data"
fi

# Build and run all tests everywhere (including integration)
# Note: scoverage is brain-dead, so each project's tests have to be run
# separately, and 'core' should be last, so that its report will include
# coverage in the core code provided by tests in other projects.
"$SBT" -DisCoverageRun=true coverage 'project it' test 'project web' test 'project core' test

# Build completed, copy oneJar to right location:
mkdir -p $SLAM_WEB_JAR_DIR
cp $SLAM_TEMP_JAR $SLAM_WEB_JAR_PATH

# Test to ensure the JAR file is valid:
"$SCRIPT_DIR/testJar"
TEST_STATUS=$?

echo "Result of SlamData JAR test: $TEST_STATUS"

exit $TEST_STATUS
